/*
 * Licensed to Systerel under one or more contributor license
 * agreements. See the NOTICE file distributed with this work
 * for additional information regarding copyright ownership.
 * Systerel licenses this file to you under the Apache
 * License, Version 2.0 (the "License"); you may not use this
 * file except in compliance with the License. You may obtain
 * a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

IMPLEMENTATION
    browse_treatment_target_it_i

REFINES
    browse_treatment_target_it

SEES
    constants,
    address_space_itf

CONCRETE_VARIABLES
    Node,
    RefIndex,
    RefIndexEnd

INVARIANT
    Node        : t_Node_i &
    Node        : t_Node &
    RefIndex    : NAT &
    RefIndex    : t_RefIndex &
    RefIndexEnd : NAT &
    RefIndexEnd : t_RefIndex &
    RefIndex    : 0..RefIndexEnd &

    starting_node = Node &
    references_to_iterate = 1..RefIndex &
    references_iterated = RefIndex..RefIndexEnd &
    next_reference_index = RefIndex

INITIALISATION
    Node        := c_Node_indet;
    RefIndex    := 0;
    RefIndexEnd := 0

OPERATIONS

    p_continue <-- init_iter_reference(p_node, p_startIndex) =
    BEGIN
        Node        := p_node;
        RefIndex    := p_startIndex;
        RefIndexEnd <-- get_Node_RefIndexEnd(p_node);
        p_continue := bool(RefIndexEnd >= RefIndex)
    END
    ;

    p_continue, p_ref, p_nextRefIndex <-- continue_iter_reference =
    BEGIN
       p_ref <-- get_RefIndex_Reference(Node, RefIndex);
       RefIndex := RefIndex + 1;
       p_continue := bool(RefIndex <= RefIndexEnd);
       p_nextRefIndex := RefIndex
    END

END
