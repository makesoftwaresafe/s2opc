/*
 * Licensed to Systerel under one or more contributor license
 * agreements. See the NOTICE file distributed with this work
 * for additional information regarding copyright ownership.
 * Systerel licenses this file to you under the Apache
 * License, Version 2.0 (the "License"); you may not use this
 * file except in compliance with the License. You may obtain
 * a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

IMPLEMENTATION
    translate_browse_path_source_it_i

REFINES
    translate_browse_path_source_it

SEES
    constants

CONCRETE_VARIABLES

    currentBrowsePathSourceIdx_i,
    nb_browsePathSourceIdx_max_refs_i

INVARIANT
    currentBrowsePathSourceIdx_i : NAT &
    nb_browsePathSourceIdx_max_refs_i : NAT &

    nb_browsePathSourceIdx_max_refs = nb_browsePathSourceIdx_max_refs_i &
    currentBrowsePathSourceIdx_i : 0..nb_browsePathSourceIdx_max_refs_i &
    nextBrowsePathSourceIdx = currentBrowsePathSourceIdx_i + 1 &

    (nb_browsePathSourceIdx_max_refs_i = 0 =>
        browsePathSourceIdx_to_iterate = {} &
        browsePathSourceIdx_iterated = {}) &

    (nb_browsePathSourceIdx_max_refs_i /= 0 =>
        browsePathSourceIdx_to_iterate = currentBrowsePathSourceIdx_i+1..nb_browsePathSourceIdx_max_refs_i &
        browsePathSourceIdx_iterated = 1..currentBrowsePathSourceIdx_i)

INITIALISATION
    currentBrowsePathSourceIdx_i := 0;
    nb_browsePathSourceIdx_max_refs_i := 0

OPERATIONS


    p_continue <-- init_iter_browsePathSourceIdx(p_nb_browsePathSourceIdx_max_refs) =
    BEGIN
        nb_browsePathSourceIdx_max_refs_i := p_nb_browsePathSourceIdx_max_refs;
        currentBrowsePathSourceIdx_i := 0;
        p_continue := bool (0 < p_nb_browsePathSourceIdx_max_refs)
    END
    ;

    p_continue, p_browsePathSourceIdx <-- continue_iter_browsePathSourceIdx =
    BEGIN
        currentBrowsePathSourceIdx_i := currentBrowsePathSourceIdx_i + 1;
        p_browsePathSourceIdx := currentBrowsePathSourceIdx_i;
        p_continue := bool (currentBrowsePathSourceIdx_i < nb_browsePathSourceIdx_max_refs_i)
    END

END