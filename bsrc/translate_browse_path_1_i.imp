/*
 * Licensed to Systerel under one or more contributor license
 * agreements. See the NOTICE file distributed with this work
 * for additional information regarding copyright ownership.
 * Systerel licenses this file to you under the Apache
 * License, Version 2.0 (the "License"); you may not use this
 * file except in compliance with the License. You may obtain
 * a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

IMPLEMENTATION
    translate_browse_path_1_i

REFINES
    translate_browse_path_1

SEES
    constants

CONCRETE_VARIABLES
    BrowsePathSource_tab_i,
    BrowsePathSource_size_i,
    BrowsePathResult_tab_i,
    BrowsePathResult_size_i,
    BrowsePathRemainingNodeId_tab_i,
    BrowsePathRemainingIndex_tab_i,
    BrowsePathRemainingNodeId_size_i

INVARIANT
    BrowsePathSource_tab_i  : t_BrowsePathResPerElt_i --> t_NodeId_i     &
    BrowsePathSource_size_i : t_BrowsePathResPerElt_i &
    BrowsePathSource      = 1..BrowsePathSource_size_i <| BrowsePathSource_tab_i &

    BrowsePathResult_tab_i  : t_BrowsePathResPerElt_i --> t_ExpandedNodeId_i   &
    BrowsePathResult_size_i : t_BrowsePathResPerElt_i &
    BrowsePathResult      = 1..BrowsePathResult_size_i <| BrowsePathResult_tab_i &

    BrowsePathRemainingNodeId_tab_i  : t_BrowsePathResPerElt_i --> t_ExpandedNodeId_i &
    BrowsePathRemainingNodeId_size_i : t_BrowsePathResPerElt_i &
    BrowsePathRemainingNodeId      = 1..BrowsePathRemainingNodeId_size_i <| BrowsePathRemainingNodeId_tab_i &

    BrowsePathRemainingIndex_tab_i  : t_BrowsePathResPerElt_i --> NAT     &
    BrowsePathRemainingIndex      = 1..BrowsePathRemainingNodeId_size_i <| BrowsePathRemainingIndex_tab_i |>> {0}

INITIALISATION

    BrowsePathSource_tab_i  := t_BrowsePathResPerElt_i * {c_NodeId_indet};
    BrowsePathSource_size_i := 0;
    BrowsePathResult_tab_i := t_BrowsePathResPerElt_i * {c_ExpandedNodeId_indet};
    BrowsePathResult_size_i := 0;
    BrowsePathRemainingNodeId_size_i := 0;
    BrowsePathRemainingNodeId_tab_i  := t_BrowsePathResPerElt_i * {c_ExpandedNodeId_indet};
    BrowsePathRemainingIndex_tab_i   := t_BrowsePathResPerElt_i * {0}


OPERATIONS

    init_BrowsePathSource =
    BEGIN
        BrowsePathSource_tab_i  := t_BrowsePathResPerElt_i * {c_NodeId_indet};
        BrowsePathSource_size_i := 0
    END
    ;

    res <-- get_BrowsePathSourceSize =
    BEGIN
        res := BrowsePathSource_size_i
    END
    ;

    nodeId <-- get_BrowsePathSource (index) =
    BEGIN
        nodeId := BrowsePathSource_tab_i (index)
    END
    ;

    add_BrowsePathSource (nodeId) =
    BEGIN
        BrowsePathSource_size_i := BrowsePathSource_size_i + 1;
        BrowsePathSource_tab_i(BrowsePathSource_size_i) := nodeId
    END
    ;

    init_BrowsePathResult =
    BEGIN
         BrowsePathResult_tab_i := t_BrowsePathResPerElt_i * {c_ExpandedNodeId_indet};
        BrowsePathResult_size_i := 0
    END
    ;

    res <-- get_BrowsePathResultSize =
    BEGIN
        res := BrowsePathResult_size_i
    END
    ;

    res <-- get_BrowsePathResult_IsFull =
    BEGIN
        res := bool(BrowsePathResult_size_i = k_n_BrowsePathResPerElt_max)
    END
    ;

    nodeId <-- get_BrowsePathResult (index) =
    BEGIN
        nodeId := BrowsePathResult_tab_i (index)
    END
    ;

    add_BrowsePathResult (nodeId) =
    BEGIN
        BrowsePathResult_size_i := BrowsePathResult_size_i + 1;
        BrowsePathResult_tab_i(BrowsePathResult_size_i) := nodeId
    END
    ;

    init_BrowsePathRemaining =
    BEGIN
        BrowsePathRemainingNodeId_size_i := 0;
        BrowsePathRemainingNodeId_tab_i  := t_BrowsePathResPerElt_i * {c_ExpandedNodeId_indet};
        BrowsePathRemainingIndex_tab_i   := t_BrowsePathResPerElt_i * {0}
    END
    ;

    res <-- get_BrowsePathRemainingSize =
    BEGIN
        res := BrowsePathRemainingNodeId_size_i
    END
    ;

    res <-- get_BrowsePathRemaining_IsFull =
    BEGIN
        res := bool(BrowsePathRemainingNodeId_size_i = k_n_BrowsePathResPerElt_max)
    END
    ;

    nodeId, remainingIndex <-- get_BrowsePathRemaining (index) =
    BEGIN
        nodeId := BrowsePathRemainingNodeId_tab_i(index);
        remainingIndex := BrowsePathRemainingIndex_tab_i(index)
    END
    ;

    add_BrowsePathResultRemaining (nodeId, index) =
    BEGIN
        BrowsePathRemainingNodeId_size_i := BrowsePathRemainingNodeId_size_i + 1;
        BrowsePathRemainingNodeId_tab_i(BrowsePathRemainingNodeId_size_i) := nodeId;
        BrowsePathRemainingIndex_tab_i(BrowsePathRemainingNodeId_size_i) := index
    END



END
